DOCKER_IMAGE ?= thepihole/tricorder

GIT_COMMIT = $(strip $(shell git rev-parse --short HEAD))

CODE_VERSION = $(strip $(shell cat VERSION))

GIT_NOT_CLEAN_CHECK = $(shell git status --porcelain)
ifneq (x$(GIT_NOT_CLEAN_CHECK), x)
DOCKER_TAG_SUFFIX = "-dirty"
endif

ifeq ($(MAKECMDGOALS),release)
DOCKER_TAG= $(CODE_VERSION)

ifndef CODE_VERSION
$(error You need to create a VERSION file to build a release)
endif

VERSION_COMMIT = $(strip $(shell git rev-list $(CODE_VERSION) -n1 | cut -c1-7))
ifneq ($(VERSION_COMMIT), $(GIT_COMMIT))
$(error You are tyring to push based on commit $(GIT_COMMIT), tagged version is $(VERSION_COMMIT))
endif

ifneq (x$(GIT_NOT_CLEAN_CHECK), x)
$(error You are trying to release a build based on a dirty repo)
endif

else
DOCKER_TAG = $(CODE_VERSION)-$(GIT_COMMIT)$(DOCKER_TAG_SUFFIX)
endif

default: build

build: docker_build output

release: docker_build docker_push output

docker_build:
	docker build \
	--build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
	--build-arg VERSION=$(CODE_VERSION) \
	--build-arg VCS_REF=$(GIT_COMMIT) \
	-t $(DOCKER_IMAGE):$(DOCKER_TAG) .

docker_push:
	docker tag $(DOCKER_IMAGE):$(DOCKER_TAG) $(DOCKER_IMAGE):latest

	docker push $(DOCKER_IMAGE):$(DOCKER_TAG)
	docker push $(DOCKER_IMAGE):latest

output:
	@echo Docker Image: $(DOCKER_IMAGE):$(DOCKER_TAG)